{"version":3,"sources":["components/Form.jsx","components/Cart.jsx","components/CartList.jsx","App.js","index.js"],"names":["Form","setInputText","cart","setCart","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Cart","cat","map","item","filter","el","CartList","filteredCart","App","useState","status","setFilteredCart","useEffect","getLocalCart","filterHandler","saveLocalCart","localStorage","setItem","JSON","stringify","getItem","cartLocal","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1da29bde.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText, cart, setCart, inputText, setStatus}) => {\r\n\r\n    const inputTextHendler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value)\r\n    };\r\n\r\n    const submitCartHendler = (e) => {\r\n        e.preventDefault();\r\n        setCart([\r\n            ...cart, { text: inputText, completed: false, id: Math.random() * 1000 }\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <form>\r\n      <input value={inputText} onChange={inputTextHendler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitCartHendler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>    \r\n        </>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst Cart = ({ text,cat, cart, setCart }) => {\r\n    \r\n    const deleteHandler = () => {\r\n        setCart(cart.filter(el => el.id !== cat.id))\r\n    }\r\n\r\n    const completeHendler = () => {\r\n        setCart(cart.map((item) => {\r\n            if (item.id === cat.id) {\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return ( \r\n        <div className='todo'>\r\n            <li className={`todo-item ${cat.completed ? \"completed\" : \"\"}`}>\r\n                {text}\r\n            </li>\r\n            <button onClick={completeHendler} className='complete-btn'><i className='fas fa-check'></i></button>\r\n            <button onClick={deleteHandler} className='trash-btn'><i className='fas fa-trash'></i></button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Cart;","import React from 'react';\r\nimport Cart from './Cart';\r\nconst CartList = ({cart, setCart, filteredCart}) => {\r\n    return (  \r\n        <>\r\n       <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {filteredCart.map(cat => (\r\n                        <Cart cart={cart} cat={cat} setCart={setCart} key={cat.id} text={cat.text}/>\r\n                ))}\r\n                </ul>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default CartList;\r\n","import './App.css';\nimport Form from './components/Form';\nimport CartList from './components/CartList';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [cart, setCart] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredCart, setFilteredCart] = useState([]);\n\n  useEffect(() => {\n    getLocalCart();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalCart();\n  }, [cart, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredCart(cart.filter(cat => cat.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredCart(cart.filter(cat => cat.completed === false));\n        break;\n      default:\n        setFilteredCart(cart);\n        break;\n    }\n  };\n\n  const saveLocalCart = () => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  };\n\n  const getLocalCart = () => {\n    if (localStorage.getItem('cart') === null) {\n      localStorage.setItem('cart', JSON.stringify([]));\n    } else {\n      let cartLocal = JSON.parse(localStorage.getItem('cart'));\n      setCart(cartLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Cart</h1>\n      </header>\n      <Form cart={cart} setCart={setCart} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <CartList cart={cart} setCart={setCart} filteredCart={filteredCart}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App.js';\n\nReactDOM.render(<App />,  document.getElementById('root')\n);\n\n"],"sourceRoot":""}